name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # build monthly for automatic patches
  schedule:
    - cron:  '37 15 1 * *'

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:

     # modify this block based on how you authenticate to AWS
     # make sure you have permission to access the Inspector ScanSbom API
     # https://docs.aws.amazon.com/inspector/latest/user/configure-cicd-account.html#cicd-iam-role
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-southeast-2"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: gergnz/tinystatus:latest
    # modify this block to scan your intended artifact
      -
        name: Inspector Scan
        id: inspector
        uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1
        with:
          # change artifact_type to either 'repository', 'container', 'binary', or 'archive'.
          artifact_type: 'container'

          # change artifact_path to the file path or container image you would like to scan.
          # File paths should be relative to your root project directory.
          # For containers, this action accepts 'docker pull'-style references to containers,
          # such as 'alpine:latest' or a file path to an image exported as TAR using docker save.
          artifact_path: 'gergnz/tinystatus:latest'

          # If enabled, this setting will display Inspector's vulnerability scan findings
          # as a GitHub actions step summary. See here for an example step summary:
          # https://github.com/aws-actions/vulnerability-scan-github-action-for-amazon-inspector/actions/runs/8800085041
          display_vulnerability_findings: "enabled"

          # Set vulnerability thresholds; if the number of vulnerabilities is
          # equal to or greater than any of the specified thresholds, this
          # action will set the 'vulnerability_threshold_exceeded'
          # output flag to 1.
          critical_threshold: 1
          high_threshold: 1
          medium_threshold: 1
          low_threshold: 1
          other_threshold: 1

          # Additional input arguments are available to control scan behavior.
          # See 'action.yml' for additional input/output options.

      - name: Display Inspector vulnerability scan results (Markdown)
        run: cat ${{ steps.inspector.outputs.inspector_scan_results_markdown }}

          ## The following steps illustrate how to
          ## upload scan results as a GitHub actions job artifact
          #- name: Upload Scan Results
          #  uses: actions/upload-artifact@v4
          #  with:
          #    name: Inspector Vulnerability Scan Artifacts
          #    path: |
          #      ${{ steps.inspector.outputs.inspector_scan_results }}
          #      ${{ steps.inspector.outputs.inspector_scan_results_csv }}
          #      ${{ steps.inspector.outputs.artifact_sbom }}
          #      ${{ steps.inspector.outputs.inspector_scan_results_markdown }}


        # This step illustrates how to add custom logic if
        # the vulnerability threshold is exceeded. This example
        # simply prints the 'vulnerability_threshold_exceeded' value
        # to the GitHub actions job terminal.
        # Replace 'echo' with 'exit' if you want to fail the job.
      - name: On vulnerability threshold exceeded
        run: echo ${{ steps.inspector.outputs.vulnerability_threshold_exceeded }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: gergnz/tinystatus:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
